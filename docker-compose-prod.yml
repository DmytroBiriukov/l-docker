version: '3.7'
services:

  app:
    container_name: ${PROJECT_ID}_app
    build: 
      context: ./docker/php-fpm
      args:
        - PHP_FPM_VERSION=${PHP_FPM_VERSION}
    environment:
      - "DOCKER_PHP_CONFIG=${DOCKER_PHP_CONFIG}"
      - "DOCKER_XDEBUG=${DOCKER_XDEBUG}"
      - "DOCKER_SUPERVISOR=${DOCKER_SUPERVISOR}"
      - "DOCKER_CRON=${DOCKER_CRON}"
    depends_on:
     - mysql
    volumes:
      - "${HOST_DOCUMENT_ROOT}:${NGINX_DOCUMENT_ROOT}"
    deploy:
      restart_policy:
        condition: any #on-failure
        delay: 5s
        max_attempts: 3
        window: 120s   

  nginx:
    container_name: ${PROJECT_ID}_nginx
    image: nginx:1.16-alpine    
    depends_on:
      - app
    ports:
      - "${PROD_NGINX_HOST_HTTP_PORT}:80"
      - "${PROD_NGINX_HOST_HTTPS_PORT}:443"
    volumes:
      - "${HOST_DOCUMENT_ROOT}:${NGINX_DOCUMENT_ROOT}"
      - "${DOCKER_CONFIG_PATH}/nginx/conf-prod:/etc/nginx/conf.d"
      - "${DOCKER_CONFIG_PATH}/certbot/conf:/etc/letsencrypt"
      - "${DOCKER_CONFIG_PATH}/certbot/www:/var/www/certbot"
    deploy:
      restart_policy:
        condition: any #on-failure
        delay: 5s
        max_attempts: 3
        window: 120s   

  node:
    container_name: ${PROJECT_ID}_nodejs
    build: 
      context: ./docker/nodejs
    depends_on:
      - app
    volumes:
      - "${HOST_DOCUMENT_ROOT}:${NGINX_DOCUMENT_ROOT}"
    deploy:
      restart_policy:
        condition: any #on-failure
        delay: 5s
        max_attempts: 3
        window: 120s   

  mysql:
    container_name: ${PROJECT_ID}_mysql
    build: 
      context: ${DOCKER_CONFIG_PATH}/mysql
      args:
        - MYSQL_VERSION=${MYSQL_VERSION} 
    environment:
      - "MYSQL_ROOT_HOST=%"
      - "MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}"
      - "MYSQL_DATABASE=${DB_DATABASE}"
      - "MYSQL_USER=${DB_USERNAME}"
      - "MYSQL_PASSWORD=${DB_PASSWORD}"
      - "SERVICE_NAME=mysql"
    tty: true 
    volumes:
      - "${HOST_DATABASE_PATH}:/var/lib/mysql"
    deploy:
      restart_policy:
        condition: any #on-failure
        delay: 5s
        max_attempts: 3
        window: 120s   

  beanstalkd:
    container_name: ${PROJECT_ID}_beanstalkd
    image: schickling/beanstalkd:latest
    ports:
      - "11300:11300"
    depends_on:
      - app
    deploy:
      restart_policy:
        condition: any #on-failure
        delay: 5s
        max_attempts: 3
        window: 120s        

  certbot:
    container_name: ${PROJECT_ID}_certbot
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - "${DOCKER_CONFIG_PATH}/certbot/conf:/etc/letsencrypt"
      - "${DOCKER_CONFIG_PATH}/certbot/www:/var/www/certbot"
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    deploy:
      restart_policy:
        condition: any #on-failure
        delay: 5s
        max_attempts: 3
        window: 120s  